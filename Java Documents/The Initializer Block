* The Initializer Block in Java
-> Initializer block contains the code that is always executed whenever an instance is created. It is used to declare/initialize the common part of various constructors of a class. For example,

Ex:

import java.io.*; 
public class GFG 
{ 
    // Initializer block starts.. 
    { 
        // This code is executed before every constructor. 
        System.out.println("Common part of constructors invoked !!"); 
    } 
    // Initializer block ends 
  
    public GFG() 
    { 
        System.out.println("Default Constructor invoked"); 
    } 
    public GFG(int x) 
    { 
        System.out.println("Parametrized constructor invoked"); 
    } 
    public static void main(String arr[]) 
    { 
        GFG obj1, obj2; 
        obj1 = new GFG(); 
        obj2 = new GFG(0); 
    } 
} 
Output:

	Common part of constructors invoked!!
	Default Constructor invoked
	Common part of constructors invoked!!
	Parametrized constructor invoked 


-> We can note that the contents of initializer block are executed whenever any constructor is invoked (before the constructorâ€™s contents).
